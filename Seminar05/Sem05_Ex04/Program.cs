
// Задача 35: Задайте одномерный массив из 123 случайных чисел. Найдите количество элементов массива, значения которых лежат в отрезке [10,99].
// Пример для массива из 5, а не 123 элементов. В своём решении сделайте для 123
// [5, 18, 123, 6, 2] -> 1
// [1, 2, 3, 6, 2] -> 0
// [10, 11, 12, 13, 14] -> 5

void FillArray(int[] ints) // Определить метод с именем FillArray, который принимает в качестве параметра целочисленный массив ints.
{
    Random rnd = new Random(); // Создаём экземпляр класса Random с именем rnd.
    for (int i = 0; i < ints.Length; i++)// Запускаем цикл, который проходит по каждому элементу массива ints.
        ints[i] = rnd.Next(0, 201);// Генерируем случайное целое число от 0 (включительно) до 201 (исключительно) и присваиваем его текущему элементу.
}

int AmountNumsInDiap(int[] array, int start, int end)// Определить метод с именем «AmountNumsInDiap», который принимает целочисленный массив «array» и два целых числа «start» и «end» в качестве параметров.
{
    int count = 0;// Инициализируем счетчик count равным 0.
    for (int i = 0; i < array.Length; i++)// Запускаем цикл, который проходит по каждому элементу массива.
    {
        if (array[i] >= start && array[i] <= end)// Проверяем, больше ли текущий элемент «массива» или равен «start» и меньше или равен «end».
        {
            count++;// Если условие выполнено, увеличиваем переменную count.
        }
    }
    return count;// Возвращаем окончательное количество чисел в указанном диапазоне.
}

int[] arrayForNumbers = new int[123];// Объявляем целочисленный массив "arrayForNumbers" из 123 элементов.

FillArray(arrayForNumbers); // Вызов метода FillArray для заполнения массива ArrayForNumbers случайными числами в диапазоне [0, 200].
int result = AmountNumsInDiap(arrayForNumbers, 10, 99);// Вызов метода «AmountNumsInDiap» для подсчета чисел в диапазоне [10, 99] в «arrayForNumbers».
Console.WriteLine(result);// Распечатываем результат, который представляет собой количество чисел в указанном диапазоне.
